/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = require('../../../../../../src/app-components/grid/grid-editing/grid-editing.component');
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/debug_context');
var import3 = require('../../../../../../src/app-components/services/authentication.service');
var import5 = require('@angular/core/src/linker/element');
var import6 = require('@angular/core/src/linker/view_utils');
var import8 = require('@angular/core/src/linker/view_type');
var import9 = require('@angular/core/src/change_detection/change_detection');
var import10 = require('../../../../../../src/app-components/services/appstate.service');
var import11 = require('@angular/router/src/router');
var import12 = require('@angular/http/src/http');
var import13 = require('../../../../../../src/app-components/services/utility.service');
var import14 = require('@angular/core/src/zone/ng_zone');
var import15 = require('angular2-jwt/angular2-jwt');
var import16 = require('@angular/core/src/metadata/view');
var import17 = require('@angular/core/src/linker/component_factory');
var Wrapper_GridEditingComponent = (function () {
    function Wrapper_GridEditingComponent(p0, p1, p2, p3, p4, p5) {
        this.changed = false;
        this.context = new import0.GridEditingComponent(p0, p1, p2, p3, p4, p5);
    }
    Wrapper_GridEditingComponent.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_GridEditingComponent.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_GridEditingComponent;
}());
exports.Wrapper_GridEditingComponent = Wrapper_GridEditingComponent;
var nodeDebugInfos_GridEditingComponent_Host0 = [new import2.StaticNodeDebugInfo([
        import3.Authentication,
        import0.GridEditingComponent
    ], import0.GridEditingComponent, {})];
var renderType_GridEditingComponent_Host = null;
var _View_GridEditingComponent_Host0 = (function (_super) {
    __extends(_View_GridEditingComponent_Host0, _super);
    function _View_GridEditingComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_GridEditingComponent_Host0, renderType_GridEditingComponent_Host, import8.ViewType.HOST, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways, nodeDebugInfos_GridEditingComponent_Host0);
    }
    _View_GridEditingComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer, 'grid-editing', import6.EMPTY_INLINE_ARRAY, rootSelector, this.debug(0, 0, 0));
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_GridEditingComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Authentication_0_4 = new import3.Authentication(this.parentInjector.get(import10.AppState), this.parentInjector.get(import11.Router), this.parentInjector.get(import12.Http), this.parentInjector.get(import13.UtilityService));
        this._GridEditingComponent_0_5 = new Wrapper_GridEditingComponent(this.parentInjector.get(import14.NgZone), this.parentInjector.get(import10.AppState), this.parentInjector.get(import11.Router), this.parentInjector.get(import12.Http), this._Authentication_0_4, this.parentInjector.get(import15.AuthHttp));
        this._appEl_0.initComponent(this._GridEditingComponent_0_5.context, [], compView_0);
        compView_0.create(this._GridEditingComponent_0_5.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_GridEditingComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.Authentication) && (0 === requestNodeIndex))) {
            return this._Authentication_0_4;
        }
        if (((token === import0.GridEditingComponent) && (0 === requestNodeIndex))) {
            return this._GridEditingComponent_0_5.context;
        }
        return notFoundResult;
    };
    _View_GridEditingComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.debug(0, 0, 0);
        this._GridEditingComponent_0_5.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._GridEditingComponent_0_5.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            this.debug(0, 0, 0);
            if ((this.numberOfChecks === 0)) {
                this._GridEditingComponent_0_5.context.ngAfterViewInit();
            }
        }
    };
    return _View_GridEditingComponent_Host0;
}(import1.DebugAppView));
function viewFactory_GridEditingComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_GridEditingComponent_Host === null)) {
        (renderType_GridEditingComponent_Host = viewUtils.createRenderComponentType('', 0, import16.ViewEncapsulation.None, [], {}));
    }
    return new _View_GridEditingComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.GridEditingComponentNgFactory = new import17.ComponentFactory('grid-editing', viewFactory_GridEditingComponent_Host0, import0.GridEditingComponent);
var styles_GridEditingComponent = [];
var nodeDebugInfos_GridEditingComponent0 = [
    new import2.StaticNodeDebugInfo([], null, {}),
    new import2.StaticNodeDebugInfo([], null, {}),
    new import2.StaticNodeDebugInfo([], null, {}),
    new import2.StaticNodeDebugInfo([], null, {})
];
var renderType_GridEditingComponent = null;
var _View_GridEditingComponent0 = (function (_super) {
    __extends(_View_GridEditingComponent0, _super);
    function _View_GridEditingComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_GridEditingComponent0, renderType_GridEditingComponent, import8.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways, nodeDebugInfos_GridEditingComponent0);
    }
    _View_GridEditingComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = import6.createRenderElement(this.renderer, parentRenderNode, 'h1', import6.EMPTY_INLINE_ARRAY, this.debug(0, 0, 0));
        this._text_1 = this.renderer.createText(this._el_0, 'Grid (Editing, Lazy loaded)', this.debug(1, 0, 4));
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', this.debug(2, 0, 36));
        this._el_3 = import6.createRenderElement(this.renderer, parentRenderNode, 'div', new import6.InlineArray2(2, 'id', 'kendoUI'), this.debug(3, 1, 0));
        this.init([], [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3
        ], [], []);
        return null;
    };
    return _View_GridEditingComponent0;
}(import1.DebugAppView));
function viewFactory_GridEditingComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_GridEditingComponent === null)) {
        (renderType_GridEditingComponent = viewUtils.createRenderComponentType('C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/src/app-components/grid/grid-editing/grid-editing.template.html', 0, import16.ViewEncapsulation.None, styles_GridEditingComponent, {}));
    }
    return new _View_GridEditingComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_GridEditingComponent0 = viewFactory_GridEditingComponent0;
//# sourceMappingURL=grid-editing.component.ngfactory.js.map