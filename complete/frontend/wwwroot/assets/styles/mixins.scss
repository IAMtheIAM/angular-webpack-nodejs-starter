// /* Mixins.scss */
// e.g. @include respond-min($tablet) {
//        background-color: $color-primary;
//      }
// Docs - http://outlinecss.co.uk/get-started.html#mixins
//---------------------------------------------//
//  * NOTE: Do not include anything that will be actually rendered in CSS, because it will be added to every imported SASS file.
//  * Do not use SASS @import inside resources files. Add imported files directly in sassResources array in webpack config instead.
//  * See: https://github.com/shakacode/sass-resources-loader

// ====================================================
// ============== VENDOR LIBRARIES  ===================
// ====================================================
//  * We are using "modular" components, there is not a single master .scss file, but rather one for each component.
//  * Therefore, each component's .scss file must have all vendor libraries imported into them or they cannot use the mixins
//  * and variables


// Susy - SASS Math Library
@import "~susy/sass/_susy";
//  Bourbon - SASS Mixins Library
@import "~bourbon/app/assets/stylesheets/_bourbon";

// ====================================================
// ============== OUTLINE.CSS MIXINS ==================
// ====================================================

// media queries / breakpoints
@mixin respond-min($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

// ghost buttons
@mixin ghost-btn($color) {
  color: $color;
  border: .125rem solid $color;
  background-color: transparent;

  &:hover,
  &:focus,
  &:active {
    background-color: $color;
  }
}

// gradients
@mixin gradient($angle, $colour1, $colour2) {
  background: $colour1;
  background: linear-gradient(#{$angle}deg, $colour1 0%, $colour2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$colour1', endColorstr='$colour2', GradientType=1);
}

// icons
@mixin icon($icon) {
  @extend %icon;
  @extend %icon-#{$icon};
}

@mixin icon-before($icon, $padding: .5rem) {
  &:before {
    @extend %icon;
    @extend %icon-#{$icon};
    padding-right: $padding;
  }
}

// ====================================================
// ============== CUSTOM MIXINS =======================
// ====================================================

@mixin content-padding {
  padding: 10px 20px;
}

// Transition Mixin
@mixin transition-default($property-speed-ease) {
  // If no args are passed, animate all with $transition-default-speed-easing
  @if $property-speed-ease == 'default' {
    @include transition($transition-default-property $transition-default-speed-easing);
  }
  // If 1 args are passed, animate given property with $transition-default-speed-easing
  @if length($property-speed-ease) == 1 and $property-speed-ease != 'default' {
    @include transition($property-speed-ease $transition-default-speed-easing);
  }
  // If 2 args are passed, animate given property and given transition and default easing
  @if length($property-speed-ease) == 2 {
    @include transition($property-speed-ease $transition-default-easing);
  }
  // If 3 args are passed, animate given property and given transition and given easing
  @if length($property-speed-ease) == 3 {
    @include transition($property-speed-ease);
  }
}

// border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
