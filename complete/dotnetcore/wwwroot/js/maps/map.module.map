{"version":3,"file":"js/chunks/map.module.chunk.js","sources":["webpack:///./src/app-components/+map/map.module.ts","webpack:///./src/app-components/+map/maps/map.style.scss","webpack:///./src/app-components/+map/map.routes.ts","webpack:///./src/app-components/+map/maps/map.component.ts","webpack:///./src/app-components/+map/maps/map.style.scss?d4cf","webpack:///./src/app-components/+map/maps/map.template.html"],"sourcesContent":["/**\r\n * Angular 2 decorators and services\r\n */\r\nimport { NguiMapModule } from '@ngui/map'; // https://github.com/ng2-ui/map\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n//\r\nimport { mapRoutes } from './map.routes';\r\n\r\n/*\r\n * Shared Utilities & Other Services\r\n */\r\nimport { Logging } from '../services/utility.service';\r\n\r\n/**\r\n * Imported Components\r\n */\r\nimport { MapComponent } from './maps/map.component';\r\n\r\n@NgModule({\r\n   imports: [CommonModule, // SharedModule,\r\n      RouterModule.forChild(mapRoutes), NguiMapModule\r\n   ],\r\n   declarations: [ // Components / Directives / Pipes\r\n      MapComponent],\r\n   exports: [\r\n      // NguiMapModule\r\n   ]\r\n})\r\n\r\nexport class MapModule {\r\n\r\n   constructor() {\r\n      if (Logging.isEnabled.light) {\r\n         console.log('%c Hello \\\"Map\\\" Module!', Logging.normal.orange);\r\n      }\r\n   }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system!./~/angular2-load-children-loader!./src/app-components/+map/map.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************/\\n/* NotFound404.style.scss */\\n/********************/\\nmap ngui-map {\\n  height: 700px; }\\n\\nmap .panel .coordinates-data {\\n  font-size: 1.3rem;\\n  margin: 10px 10px 10px 0; }\\n\\nmap .panel label {\\n  font-weight: bold;\\n  font-size: 1.3rem;\\n  color: initial; }\\n\\nmap .panel .color-palette::after {\\n  clear: both;\\n  content: \\\"\\\";\\n  display: block; }\\n\\nmap .panel .color-button {\\n  width: 18%;\\n  height: 60px;\\n  font-size: 0;\\n  margin-right: 4px;\\n  float: left;\\n  cursor: pointer;\\n  border: 4px solid #fff; }\\n  map .panel .color-button.selected {\\n    border: 4px solid #789; }\\n\\nmap .panel .places-results {\\n  max-height: 230px;\\n  overflow-y: scroll; }\\n\\nmap .panel .delete-button {\\n  margin-top: 5px; }\\n\\nmap .pac-input {\\n  width: 20%;\\n  background: #fff;\\n  border: 1px solid #555;\\n  color: #333;\\n  margin: 10px; }\\n\", \"\", {\"version\":3,\"sources\":[\"C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/src/app-components/+map/maps/C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/src/app-components/+map/maps/map.style.scss\",\"C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/src/app-components/+map/maps/C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/node_modules/bourbon/core/bourbon/library/_clearfix.scss\"],\"names\":[],\"mappings\":\"AA8KA,sBAAsB;AACtB,4BAA4B;AAC5B,sBAAsB;AAGtB;EAMS,cAAa,EACf;;AAPP;EAaY,kBAAiB;EACjB,yBAAwB,EAC1B;;AAfV;EAkBY,kBAAiB;EACjB,kBAAiB;EACjB,eAAc,EAChB;;AArBV;EC/JI,YAAW;EACX,YAAW;EACX,eAAc,EACf;;AD4JH;EA4BY,WAAU;EACV,aAAY;EACZ,aAAY;EACZ,kBAAiB;EACjB,YAAW;EACX,gBAAe;EACf,uBAAsB,EAKxB;EAvCV;IAoCe,uBAAsB,EAExB;;AAtCb;EA0CY,kBAAiB;EACjB,mBAAkB,EACpB;;AA5CV;EA+CY,gBAAe,EACjB;;AAhDV;EAqDM,WAAU;EACV,iBAAgB;EAChB,uBAAsB;EACtB,YAAW;EACX,aAAY,EACd\",\"file\":\"map.style.scss\",\"sourcesContent\":[\"//---------------------------------------------//\\r\\n// Variables.scss\\r\\n// all variables...\\r\\n// Docs - http://outlinecss.co.uk/get-started.html#variables\\r\\n//---------------------------------------------//\\r\\n\\r\\n//  * NOTE: Do not include anything that will be actually rendered in CSS, because it will be added to every imported SASS file.\\r\\n//  * Do not use SASS @import inside resources files. Add imported files directly in resources array in webpack config instead.\\r\\n//  * See: https://github.com/shakacode/sass-resources-loader\\r\\n\\r\\n\\r\\n// html\\r\\n$html-font-base: 22px; //  used for calculating media query breakpoints\\r\\n//$font-base: 1rem; //  used for for scaling font-size rhythm - in outline.css framework\\r\\n$bootstrap-font-base: 22px; // used for scaling bootstrap components - in bootstrap/variables.scss\\r\\n\\r\\n$spacing: 1.5rem; // 24px\\r\\n//$body-background-color: #F0F0F0;\\r\\n\\r\\n// Colours\\r\\n$colors-primary-green: #009688;\\r\\n$colors-app-background: #2a4f91;\\r\\n\\r\\n// Fonts\\r\\n//$font-primary: 'Segoe UI', san-serif; // body font\\r\\n//$font-secondary: 'Lato', sans-serif; // title font\\r\\n//$font-monospace: Monaco, Consolas, 'Lucida Console', monospace;\\r\\n//$font-base-color: $color-grey-medium;\\r\\n\\r\\n\\r\\n// Placeholder text colour\\r\\n//$placeholder-text: $color-grey;\\r\\n\\r\\n// Button text color\\r\\n//$btn-text-color: #fff;\\r\\n//$btn-text-color-alt: $color-grey-dark;\\r\\n\\r\\n// Breakpoints\\r\\n$mobile-landscape: 30rem; // 480px\\r\\n$tablet: 40rem; // 640px\\r\\n$tablet-wide: 48rem; // 768px\\r\\n$desktop: 64rem; // 1024px\\r\\n$widescreen: 71.25rem; // 1140px\\r\\n$hd-widescreen: 100rem; // 1140px\\r\\n$ultra-hd-widescreen: 134.375rem; // 2150px for Microsoft Surface Pro 3\\r\\n\\r\\n// Line height\\r\\n$line-height-base: 1.5;\\r\\n\\r\\n// Transitions\\r\\n$transition-default-property: all;\\r\\n$transition-default-easing: ease-in-out;\\r\\n$transition-default-speed: 0.2s;\\r\\n$transition-default-speed-easing: $transition-default-speed $transition-default-easing;\\r\\n\\r\\n\\r\\n//// Layout Conditions\\r\\n$sidebarEnabled: true;\\r\\n$contentContainerWidth: if($sidebarEnabled, 21, 24); // if($condition, true, false)\\r\\n$contentContainerPosition: if($sidebarEnabled, 4, 1);\\r\\n\\r\\n$sidebarWidth: if($sidebarEnabled, 3, 1); // 3 cols if true, 1 col if false. if false, sidebar will be display:none\\r\\n$sidebarPosition: if($sidebarEnabled, 1, 1);\\r\\n\\r\\n//$showSidebar: if($sidebarEnabled, visible, hidden);\\r\\n$showSidebar: if($sidebarEnabled, block, none);\\r\\n\\n// /* Mixins.scss */\\r\\n// e.g. @include respond-min($tablet) {\\r\\n//        background-color: $color-primary;\\r\\n//      }\\r\\n// Docs - http://outlinecss.co.uk/get-started.html#mixins\\r\\n//---------------------------------------------//\\r\\n//  * NOTE: Do not include anything that will be actually rendered in CSS, because it will be added to every imported SASS file.\\r\\n//  * Do not use SASS @import inside resources files. Add imported files directly in resources array in webpack config instead.\\r\\n//  * See: https://github.com/shakacode/sass-resources-loader\\r\\n\\r\\n// ====================================================\\r\\n// ============== VENDOR LIBRARIES  ===================\\r\\n// ====================================================\\r\\n//  * We are using \\\"modular\\\" components, there is not a single master .scss file, but rather one for each component.\\r\\n//  * Therefore, each component's .scss file must have all vendor libraries imported into them or they cannot use the mixins\\r\\n//  * and variables\\r\\n\\r\\n\\r\\n// Susy - SASS Math Library\\r\\n@import \\\"~susy/sass/_susy\\\";\\r\\n//  Bourbon - SASS Mixins Library\\r\\n@import \\\"~bourbon/core/_bourbon.scss\\\";\\r\\n\\r\\n// ====================================================\\r\\n// ============== OUTLINE.CSS MIXINS ==================\\r\\n// ====================================================\\r\\n\\r\\n// media queries / breakpoints\\r\\n@mixin respond-min($width) {\\r\\n  @media screen and (min-width: $width) {\\r\\n    @content;\\r\\n  }\\r\\n}\\r\\n\\r\\n// ghost buttons\\r\\n@mixin ghost-btn($color) {\\r\\n  color: $color;\\r\\n  border: .125rem solid $color;\\r\\n  background-color: transparent;\\r\\n\\r\\n  &:hover,\\r\\n  &:focus,\\r\\n  &:active {\\r\\n    background-color: $color;\\r\\n  }\\r\\n}\\r\\n\\r\\n// gradients\\r\\n@mixin gradient($angle, $colour1, $colour2) {\\r\\n  background: $colour1;\\r\\n  background: linear-gradient(#{$angle}deg, $colour1 0%, $colour2 100%);\\r\\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$colour1', endColorstr='$colour2', GradientType=1);\\r\\n}\\r\\n\\r\\n// icons\\r\\n@mixin icon($icon) {\\r\\n  @extend %icon;\\r\\n  @extend %icon-#{$icon};\\r\\n}\\r\\n\\r\\n@mixin icon-before($icon, $padding: .5rem) {\\r\\n  &:before {\\r\\n    @extend %icon;\\r\\n    @extend %icon-#{$icon};\\r\\n    padding-right: $padding;\\r\\n  }\\r\\n}\\r\\n\\r\\n// ====================================================\\r\\n// ============== CUSTOM MIXINS =======================\\r\\n// ====================================================\\r\\n\\r\\n@mixin content-padding {\\r\\n  padding: 10px 20px;\\r\\n}\\r\\n\\r\\n// Transition Mixin\\r\\n@mixin transition-default($property-speed-ease) {\\r\\n  // If no args are passed, animate all with $transition-default-speed-easing\\r\\n  @if $property-speed-ease == 'default' {\\r\\n    @include transition($transition-default-property $transition-default-speed-easing);\\r\\n  }\\r\\n  // If 1 args are passed, animate given property with $transition-default-speed-easing\\r\\n  @if length($property-speed-ease) == 1 and $property-speed-ease != 'default' {\\r\\n    @include transition($property-speed-ease $transition-default-speed-easing);\\r\\n  }\\r\\n  // If 2 args are passed, animate given property and given transition and default easing\\r\\n  @if length($property-speed-ease) == 2 {\\r\\n    @include transition($property-speed-ease $transition-default-easing);\\r\\n  }\\r\\n  // If 3 args are passed, animate given property and given transition and given easing\\r\\n  @if length($property-speed-ease) == 3 {\\r\\n    @include transition($property-speed-ease);\\r\\n  }\\r\\n}\\r\\n\\r\\n// border radius\\r\\n@mixin border-radius($radius) {\\r\\n  -webkit-border-radius: $radius;\\r\\n  -moz-border-radius: $radius;\\r\\n  -ms-border-radius: $radius;\\r\\n  border-radius: $radius;\\r\\n}\\r\\n\\n$susyDebug:show;\\n$lime:#C0FF33;\\n$magenta:#cc33dd;\\n/********************/\\r\\n/* NotFound404.style.scss */\\r\\n/********************/\\r\\n@import '../../../assets/styles/appwide-metastyles.scss';\\r\\n\\r\\nmap {\\r\\n\\r\\n   @include nested(24) {\\r\\n\\r\\n      ngui-map {\\r\\n         //@include span(18);\\r\\n         height: 700px;\\r\\n      }\\r\\n\\r\\n      .panel {\\r\\n         //@include span(6 last);\\r\\n\\r\\n         .coordinates-data {\\r\\n            font-size: 1.3rem;\\r\\n            margin: 10px 10px 10px 0;\\r\\n         }\\r\\n\\r\\n         label {\\r\\n            font-weight: bold;\\r\\n            font-size: 1.3rem;\\r\\n            color: initial;\\r\\n         }\\r\\n\\r\\n         .color-palette {\\r\\n            @include clearfix;\\r\\n         }\\r\\n\\r\\n         .color-button {\\r\\n            width: 18%;\\r\\n            height: 60px;\\r\\n            font-size: 0;\\r\\n            margin-right: 4px;\\r\\n            float: left;\\r\\n            cursor: pointer;\\r\\n            border: 4px solid #fff;\\r\\n            &.selected {\\r\\n               border: 4px solid #789;\\r\\n\\r\\n            }\\r\\n         }\\r\\n\\r\\n         .places-results {\\r\\n            max-height: 230px;\\r\\n            overflow-y: scroll;\\r\\n         }\\r\\n\\r\\n         .delete-button {\\r\\n            margin-top: 5px;\\r\\n         }\\r\\n      }\\r\\n   }\\r\\n\\r\\n   .pac-input {\\r\\n      width: 20%;\\r\\n      background: #fff;\\r\\n      border: 1px solid #555;\\r\\n      color: #333;\\r\\n      margin: 10px;\\r\\n   }\\r\\n}\\r\\n\",\"@charset \\\"UTF-8\\\";\\n\\n/// Provides an easy way to include a clearfix for containing floats.\\n///\\n/// @link https://goo.gl/yP5hiZ\\n///\\n/// @example scss\\n///   .element {\\n///     @include clearfix;\\n///   }\\n///\\n///   // CSS Output\\n///   .element::after {\\n///     clear: both;\\n///     content: \\\"\\\";\\n///     display: block;\\n///   }\\n\\n@mixin clearfix {\\n  &::after {\\n    clear: both;\\n    content: \\\"\\\";\\n    display: block;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/postcss-loader/lib?{\"postcss\":[null],\"sourceMap\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/sass-resources-loader/lib/loader.js?{\"resources\":[\"./src/assets/styles/variables.scss\",\"./src/assets/styles/mixins.scss\"]}!./~/@epegzz/sass-vars-loader/src?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./src/app-components/+map/maps/map.style.scss\n// module id = ./node_modules/css-loader/index.js?sourceMap!./node_modules/postcss-loader/lib/index.js?{\"postcss\":[null],\"sourceMap\":true}!./node_modules/sass-loader/lib/loader.js?sourceMap!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":[\"./src/assets/styles/variables.scss\",\"./src/assets/styles/mixins.scss\"]}!./node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./src/app-components/+map/maps/map.style.scss\n// module chunks = 3","/**\r\n * Imported Components\r\n */\r\nimport { MapComponent } from './maps/map.component';\r\n\r\n/*\r\n * Shared Utilities & Other Services\r\n */\r\nimport { RouteProtection } from '../services/route-protection.service';\r\n\r\n// async components must be named mapRoutes for WebpackAsyncRoute\r\nexport const mapRoutes = [{\r\n   path: '',\r\n   component: MapComponent, // canActivate: [RouteProtection],\r\n   // pathMatch: 'full'\r\n}];\r\n;\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system!./~/angular2-load-children-loader!./src/app-components/+map/map.routes.ts","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { DrawingManager } from '@ngui/map';\r\n\r\n/*\r\n * Shared Utilities\r\n */\r\nimport { Logging, UtilityService } from '../../services/utility.service';\r\n// import { Authentication } from '../../services/authentication.service';\r\n// import { AppState } from '../../services/appstate.service';\r\n\r\n/**\r\n * This is where CSS/SCSS files that the component depends on are required.\r\n *\r\n * Function: To enable \"Hot Module Replacement\" of CSS/SCSS files\r\n * during development. During productions, all styles will be extracted into\r\n * external stylesheets. Do NOT add styles the \"Angular2 Way\" in the\r\n * @Component decorator (\"styles\" and \"styleUrls\" properties)\r\n */\r\nimport './map.style.scss';\r\n\r\n@Component({\r\n   selector: 'map',\r\n   template: require('./map.template.html'),\r\n})\r\n\r\nexport class MapComponent {\r\n   map: any;\r\n   selectedShape: google.maps.Circle | google.maps.Rectangle | google.maps.Polygon | google.maps.Polyline;\r\n   selectedShapeType: string;\r\n   colors: string[] = ['#1E90FF', '#FF1493', '#32CD32', '#FF8C00', '#4B0082'];\r\n   selectedColor: string;\r\n   colorButtons = {};\r\n   placeMarkers: Array<google.maps.Marker> = [];\r\n   input: HTMLInputElement;\r\n   mapzoom: string;\r\n   mapcenter: string;\r\n   position: string;\r\n   path: string;\r\n   bounds: string;\r\n   centerBounds: string;\r\n   radius: string;\r\n\r\n   @ViewChild(DrawingManager) private drawingManager: DrawingManager;\r\n\r\n   constructor(public utilityService: UtilityService) {\r\n\r\n      // // Async load google maps API, with webpack require.ensure\r\n      // require.ensure([], function(require) {\r\n      //\r\n      //    // This is the google maps api JS file generated using monsoon's key\r\n      //    // From URL: https://maps.googleapis.com/maps/api/js?v=3.27&key=AIzaSyDFJ9CWZ6ko8W-43lG1gIjv0IDm4QUvCrQ\r\n      //    // require('../../lib/google/maps/js/google.maps.api.monsoon-key.js');\r\n      //\r\n      //    // MapComponent.prototype.initMap();\r\n      //\r\n      // });\r\n   }\r\n\r\n   ngOnInit() {\r\n      if (Logging.isEnabled.light) { console.log('%c Hello \\\"Map\\\" component!', Logging.normal.lime); }\r\n\r\n      this.drawingManager['initialized$'].subscribe((dm) => {\r\n         this.map = dm.map;\r\n         google.maps.event.addListener(dm, 'overlaycomplete', (event) => {\r\n\r\n            // Switch back to non-drawing mode after drawing a shape.\r\n            dm.setDrawingMode(null);\r\n\r\n            // Add an event listeners to the newly-drawn shape\r\n            var newShape = event.overlay;\r\n            newShape.type = event.type;\r\n\r\n            // if its not a marker, add custom event enableCoordinatesChangedEvent to the overlay/shape\r\n            var isNotMarker = (newShape.type !== google.maps.drawing.OverlayType.MARKER);\r\n            if (isNotMarker) {\r\n               /**\r\n                * () => enableCoordinatesChangedEvent\r\n                *\r\n                * description: Extends google maps with a custom event listener called 'coordinates_changed' for\r\n                * all shapes ' instead of listening for\r\n                * 'center_changed' (circle), 'bounds_changed'(rectangle), and 'set_at' (polygon/polyline)\r\n                * individually\r\n                */\r\n               event.overlay.enableCoordinatesChangedEvent(newShape);\r\n            }\r\n            google.maps.event.addListener(newShape, 'click', () => {\r\n               this.setSelection(newShape, isNotMarker);\r\n            });\r\n            google.maps.event.addListener(newShape, 'coordinates_changed', (index, obj) => {\r\n               // This is the main event to listen for, all shapes will trigger this event when dragged, resized, or reshaped\r\n               console.log('coordinates_changed');\r\n               this.updateCurSelText(newShape);\r\n            });\r\n            google.maps.event.addListener(newShape, 'drag', () => {\r\n               // console.log('\"drag\" fired - ignoring, using custom \"coordinates_changed\" event');\r\n               // this.updateCurSelText(newShape); // uncomment this for realtime coordinate updates while dragging\r\n            });\r\n            google.maps.event.addListener(newShape, 'dragend', () => {\r\n               // console.log('\"dragend\" fired - ignoring, using custom \"coordinates_changed\" event');\r\n            });\r\n\r\n            this.setSelection(newShape, isNotMarker);\r\n         });\r\n\r\n         // enable 'coordinates_changed' custom event for all shapes\r\n         google.maps.Rectangle.prototype.enableCoordinatesChangedEvent = this.enableCoordinatesChangedEvent;\r\n         google.maps.Circle.prototype.enableCoordinatesChangedEvent = this.enableCoordinatesChangedEvent;\r\n         google.maps.Polygon.prototype.enableCoordinatesChangedEvent = this.enableCoordinatesChangedEvent;\r\n         google.maps.Polyline.prototype.enableCoordinatesChangedEvent = this.enableCoordinatesChangedEvent;\r\n\r\n         // Clear the current selection when the drawing mode is changed, or when the map is clicked.\r\n         google.maps.event.addListener(dm, 'drawingmode_changed', this.clearSelection);\r\n         google.maps.event.addListener(this.map, 'click', this.clearSelection);\r\n\r\n         this.buildColorPalette();\r\n\r\n         // Create the search box and link it to the UI element.\r\n         this.input = <HTMLInputElement>document.getElementById('pac-input');\r\n         this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(this.input);\r\n\r\n         var searchBox = new google.maps.places.SearchBox((this.input));\r\n         // Listen for the event fired when the user selects an item from the pick list. Retrieve the matching places for that item.\r\n         google.maps.event.addListener(searchBox, 'places_changed', () => {\r\n            var places = searchBox.getPlaces();\r\n            if (places.length === 0) {\r\n               return;\r\n            }\r\n\r\n            // Clear out the old places markers from map.\r\n            for (var i = 0, marker; marker = this.placeMarkers[i]; i++) {\r\n               marker.setMap(null);\r\n            }\r\n            // Clear the old places data object.\r\n            this.placeMarkers = [];\r\n\r\n            // For each place, get the icon, place name, and location.\r\n            var bounds = new google.maps.LatLngBounds();\r\n            for (var i = 0, place; place = places[i]; i++) {\r\n               var image = {\r\n                  url: place.icon,\r\n                  size: new google.maps.Size(71, 71),\r\n                  origin: new google.maps.Point(0, 0),\r\n                  anchor: new google.maps.Point(17, 34),\r\n                  scaledSize: new google.maps.Size(25, 25)\r\n               };\r\n               // Create a marker for each place.\r\n               var placemarker = new google.maps.Marker({\r\n                  map: this.map,\r\n                  icon: image,\r\n                  title: place.name,\r\n                  position: place.geometry.location\r\n               });\r\n               this.placeMarkers.push(placemarker);\r\n               bounds.extend(place.geometry.location);\r\n            }\r\n            this.map.fitBounds(bounds);\r\n         });\r\n\r\n         // Bias the SearchBox results towards places that are within the bounds of the current map's viewport.\r\n         google.maps.event.addListener(this.map, 'bounds_changed', (event) => {\r\n            var bounds = this.map.getBounds();\r\n            searchBox.setBounds(bounds);\r\n            // this.curposdiv = \"curpos Z: \" + this.map.getZoom() + \" C: \" + this.map.getCenter().toUrlValue();\r\n            this.mapzoom = this.map.getZoom();\r\n            this.mapcenter = this.map.getCenter().toUrlValue();\r\n         });\r\n\r\n      });\r\n   }\r\n\r\n   enableCoordinatesChangedEvent(selectedShape) {\r\n      var type = selectedShape.type, isBeingDragged = false, triggerCoordinatesChanged = () => {\r\n\r\n         // Broadcast normalized event\r\n         google.maps.event.trigger(selectedShape, 'coordinates_changed');\r\n      };\r\n\r\n      // If the overlay is being dragged, set_at gets called repeatedly, so either we can debounce that or ignore while dragging, ignoring is more efficient\r\n      google.maps.event.addListener(selectedShape, 'dragstart', () => {\r\n         isBeingDragged = true;\r\n      });\r\n\r\n      //if the overlay is dragged\r\n      google.maps.event.addListener(selectedShape, 'dragend', () => {\r\n         triggerCoordinatesChanged();\r\n         isBeingDragged = false;\r\n      });\r\n\r\n      if (type === 'circle') {\r\n         google.maps.event.addListener(selectedShape, \"radius_changed\", () => {\r\n            triggerCoordinatesChanged();\r\n         });\r\n\r\n         google.maps.event.addListener(selectedShape, \"center_changed\", () => {\r\n            if (!isBeingDragged) {\r\n               triggerCoordinatesChanged();\r\n            }\r\n         });\r\n      }\r\n      else if (type === 'rectangle') {\r\n         google.maps.event.addListener(selectedShape, \"bounds_changed\", () => {\r\n            if (!isBeingDragged) {\r\n               triggerCoordinatesChanged();\r\n            }\r\n         });\r\n      }\r\n      else if (type === 'polygon' || type === 'polygon') {\r\n         // If vertices are added or deleted to any of the possible paths\r\n            selectedShape.getPaths().forEach((path, i) => {\r\n            google.maps.event.addListener(path, \"insert_at\", () => {\r\n               triggerCoordinatesChanged();\r\n            });\r\n            google.maps.event.addListener(path, \"set_at\", () => {\r\n               if (!isBeingDragged) {\r\n                  triggerCoordinatesChanged();\r\n               }\r\n            });\r\n            google.maps.event.addListener(path, \"remove_at\", () => {\r\n               triggerCoordinatesChanged();\r\n            });\r\n         });\r\n      }\r\n\r\n   }\r\n\r\n   updateCurSelText(selectedShape) {\r\n      var coordinates, xy, contentString = '';\r\n\r\n      // Reset values every time a shape is selected\r\n      this.bounds = selectedShape.getBounds;\r\n      this.centerBounds = selectedShape.getBounds;\r\n      this.path = selectedShape.getPath;\r\n      this.radius = selectedShape.getRadius;\r\n      this.position = selectedShape.position;\r\n\r\n      if (selectedShape.type === 'marker') {\r\n         this.position = selectedShape.position.toUrlValue();\r\n      }\r\n      else if (selectedShape.type === 'circle' || selectedShape.type === 'rectangle') {\r\n\r\n         if (selectedShape.type === 'circle') {\r\n            this.radius = selectedShape.getRadius();\r\n         }\r\n\r\n         coordinates = selectedShape.getBounds();\r\n         this.centerBounds = coordinates.getCenter().toUrlValue();\r\n         this.bounds = \"[NE: \" + coordinates.getNorthEast().toUrlValue() + \" SW: \" + coordinates.getSouthWest().toUrlValue() + \"]\";\r\n         var coordinatesJson = coordinates.toJSON();\r\n         console.log(coordinatesJson);\r\n\r\n         // Enumerate over the object properties. i.e. for (prop in obj) { alert(prop + ' = ' + obj[prop]) }\r\n         for (xy in coordinatesJson) {\r\n            if (coordinatesJson.hasOwnProperty(xy)) {\r\n               contentString = xy + ': ' + coordinatesJson[xy];\r\n               // console.log(`${selectedShape.type} Coordinate: ${contentString}`);\r\n            }\r\n         }\r\n      }\r\n      else if (selectedShape.type === 'polygon' || selectedShape.type === 'polyline') {\r\n         this.path = \"\";\r\n\r\n         // For a polygon or polyline, getPath() returns the MVCArray of LatLngs.\r\n         for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\r\n            this.path += selectedShape.getPath().getAt(i).toUrlValue() + \" , \";\r\n         }\r\n\r\n         var polyCoordinateArr = [];\r\n         // Iterate over the vertices.\r\n         selectedShape.getPath().getArray().forEach((el, i) => {\r\n            polyCoordinateArr.push(el.toJSON());\r\n            // console.log(`${selectedShape.type} Coordinate ${i + 1}: `, el.toJSON());\r\n         })\r\n         console.log(polyCoordinateArr);\r\n      }\r\n\r\n      // Inspired by example on github gist:\r\n      // See: https://gist.github.com/anonymous/68b8f6a586c512cfc768#file-gmaps-drawing-tools-places-htm-L224\r\n\r\n   }\r\n\r\n   onMapReady(map) {\r\n      // console.log('map', map);\r\n      // console.log('markers', map.markers);  // to get all markers as an array\r\n   }\r\n\r\n   onMapClick(event) {\r\n      this.clearSelection();\r\n      // this.positions.push(event.latLng);\r\n      event.target.panTo(event.latLng);\r\n   }\r\n\r\n   setSelection(shape, isNotMarker) {\r\n      this.clearSelection();\r\n      this.selectedShape = shape;\r\n      this.selectedShapeType = shape.type;\r\n      if (isNotMarker) {\r\n         shape.setEditable(true);\r\n      }\r\n      this.selectColor(shape.get('fillColor') || shape.get('strokeColor'), null);\r\n      this.updateCurSelText(shape);\r\n   }\r\n\r\n   clearSelection() {\r\n      if (this.selectedShape) {\r\n         if (typeof this.selectedShape.setEditable == 'function') {\r\n            this.selectedShape.setEditable(false);\r\n         }\r\n         this.selectedShape = null;\r\n      }\r\n   }\r\n\r\n   deleteSelectedShape() {\r\n      if (this.selectedShape) {\r\n         this.selectedShape.setMap(null);\r\n      }\r\n   }\r\n\r\n   selectColor(color, element) {\r\n      this.selectedColor = color;\r\n\r\n      if (element) {\r\n         // Get the node list\r\n         var colorButtons = document.getElementsByClassName('color-button');\r\n         // Turn the node list into an array\r\n         var colorButtonsArr = this.utilityService.slice(colorButtons);\r\n\r\n         // Remove .selected class from all buttons\r\n         for (var i2 = 0; i2 < colorButtonsArr.length; i2++) {\r\n            // console.log(colorButtonsArr[i]); //second console output\r\n            colorButtonsArr[i2].classList.remove('selected');\r\n         }\r\n\r\n         // Now find the selected color and add the .selected class\r\n         for (var i = 0; i < this.colors.length; ++i) {\r\n            var currColor = this.colors[i];\r\n\r\n            if (currColor === color) {\r\n               element.classList.add('selected');\r\n            }\r\n         }\r\n      }\r\n\r\n      // Retrieves the current options from the drawing manager and replaces the\r\n      // stroke or fill color as appropriate.\r\n      var polylineOptions = this.drawingManager.polylineOptions;\r\n      polylineOptions.strokeColor = color;\r\n      this.drawingManager.polylineOptions = polylineOptions;\r\n\r\n      var rectangleOptions = this.drawingManager.rectangleOptions;\r\n      rectangleOptions.fillColor = color;\r\n      this.drawingManager.rectangleOptions = rectangleOptions;\r\n\r\n      var circleOptions = this.drawingManager.circleOptions;\r\n      circleOptions.fillColor = color;\r\n      this.drawingManager.circleOptions = circleOptions;\r\n\r\n      var polygonOptions = this.drawingManager.polygonOptions;\r\n      polygonOptions.fillColor = color;\r\n      this.drawingManager.polygonOptions = polygonOptions;\r\n   }\r\n\r\n   setSelectedShapeColor(color) {\r\n      if (this.selectedShape) {\r\n         if (this.selectedShape.type == 'polyline') {\r\n            this.selectedShape.set('strokeColor', color);\r\n         }\r\n         else {\r\n            this.selectedShape.set('fillColor', color);\r\n         }\r\n      }\r\n   }\r\n\r\n   makeColorButton(color) {\r\n      var _this = this;\r\n      var button = document.createElement('span');\r\n      button.className = 'color-button';\r\n      button.style.backgroundColor = color;\r\n      google.maps.event.addDomListener(button, 'click', () => {\r\n         _this.selectColor(color, button);\r\n         _this.setSelectedShapeColor(color);\r\n      });\r\n      return button;\r\n   }\r\n\r\n   buildColorPalette() {\r\n      var colorPalette = document.getElementById('color-palette');\r\n      for (var i = 0; i < this.colors.length; ++i) {\r\n         var currColor = this.colors[i];\r\n         var colorButton = this.makeColorButton(currColor);\r\n         colorPalette.appendChild(colorButton);\r\n         this.colorButtons[currColor] = colorButton;\r\n      }\r\n      this.selectColor(this.colors[0], null);\r\n   }\r\n\r\n   deletePlacesSearchResults() {\r\n      var _this = this;\r\n      for (var i = 0, marker; marker = _this.placeMarkers[i]; i++) {\r\n         marker.setMap(null);\r\n      }\r\n      _this.placeMarkers = [];\r\n      this.input.value = ''; // clear the box too\r\n   }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system!./~/angular2-load-children-loader!./src/app-components/+map/maps/map.component.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/postcss-loader/lib/index.js??ref--0-2!../../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../../node_modules/sass-resources-loader/lib/loader.js??ref--0-4!../../../../node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./map.style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/postcss-loader/lib/index.js??ref--0-2!../../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../../node_modules/sass-resources-loader/lib/loader.js??ref--0-4!../../../../node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./map.style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/postcss-loader/lib/index.js??ref--0-2!../../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../../node_modules/sass-resources-loader/lib/loader.js??ref--0-4!../../../../node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./map.style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app-components/+map/maps/map.style.scss\n// module id = ./src/app-components/+map/maps/map.style.scss\n// module chunks = 3","module.exports = \"<div class=\\\"row\\\">\\r\\n   <div class=\\\"col s12\\\">\\r\\n      <div class=\\\"card-panel\\\">\\r\\n         <h4>Drawing Manager</h4>\\r\\n         <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col s9\\\">\\r\\n               <ngui-map zoom=\\\"11\\\"\\r\\n                  center=\\\"37.340498,-122.032097\\\"\\r\\n                  (mapReady$)=\\\"onMapReady($event)\\\"\\r\\n                  (mapClick)=\\\"onMapClick($event)\\\"\\r\\n                  [fullscreenControl]=\\\"true\\\"\\r\\n                  [fullscreenControlOptions]=\\\"{position: 'TOP_RIGHT'}\\\"\\r\\n               >\\r\\n                  <polygon [editable]=\\\"true\\\"\\r\\n                     [paths]=\\\"paths\\\"\\r\\n                     [strokeColor]=\\\"'#FFC107'\\\"\\r\\n                     [strokeOpacity]=\\\"0.8\\\"\\r\\n                     [strokeWeight]=\\\"2\\\"\\r\\n                     [fillColor]=\\\"'#FFC107'\\\"\\r\\n                     [fillOpacity]=\\\"0.35\\\"></polygon>\\r\\n\\r\\n                  <drawing-manager\\r\\n                     [drawingMode]=\\\"'marker'\\\"\\r\\n                     [drawingControl]=\\\"true\\\"\\r\\n                     [drawingControlOptions]=\\\"{\\r\\n                    position: 'TOP_CENTER',\\r\\n                    drawingModes: ['marker', 'circle', 'polygon', 'polyline', 'rectangle']\\r\\n                   }\\\"\\r\\n                     [polylineOptions]=\\\"{draggable: true}\\\"\\r\\n                     [rectangleOptions]=\\\"{draggable: true}\\\"\\r\\n                     [polygonOptions]=\\\"{draggable: true}\\\"\\r\\n                     [circleOptions]=\\\"{draggable: true}\\\">\\r\\n                  </drawing-manager>\\r\\n               </ngui-map>\\r\\n            </div>\\r\\n            <div class=\\\"col s3\\\">\\r\\n               <input id=\\\"pac-input\\\" class=\\\"pac-input\\\" type=\\\"text\\\" placeholder=\\\"Search Box\\\">\\r\\n               <div class=\\\"panel\\\">\\r\\n                  <div id=\\\"color-palette\\\" class=\\\"color-palette\\\"></div>\\r\\n                  <button id=\\\"delete-shape\\\" class=\\\"delete-button\\\" (click)=\\\"deleteSelectedShape()\\\">Delete Selected Shape</button>\\r\\n                  <button id=\\\"delete-places\\\" class=\\\"delete-button\\\" (click)=\\\"deletePlacesSearchResults()\\\">Delete Places</button>\\r\\n                  <div class=\\\"coordinates-data\\\">\\r\\n                     <div class=\\\"map-data\\\">\\r\\n                        <b>Map Zoom:</b> {{mapzoom}}<br />\\r\\n                        <b>Map Center:</b> {{mapcenter}}\\r\\n                     </div>\\r\\n                     <div class=\\\"shape-data\\\">\\r\\n                        <label>Shape Type</label>: {{selectedShapeType}}<br />\\r\\n                        <label>Position</label>: {{position}}<br />\\r\\n                        <label>Path</label>: {{path}}<br />\\r\\n                        <label>Bounds</label>: {{bounds}}<br />\\r\\n                        <label>Center Bounds</label>: {{centerBounds}}<br />\\r\\n                        <label>Radius</label>: {{radius}}<br />\\r\\n                     </div>\\r\\n                     <label>Places</label>:\\r\\n                     <div class=\\\"places-results\\\">\\r\\n                        <span *ngFor=\\\"let placeMarker of placeMarkers\\\">{{placeMarker.title}}<br /></span>\\r\\n                     </div>\\r\\n                     <div class=\\\"note\\\">\\r\\n                        <small>Note: markers can be selected, but are not graphically indicated; can be deleted, but cannot have their color changed.</small>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app-components/+map/maps/map.template.html\n// module id = ./src/app-components/+map/maps/map.template.html\n// module chunks = 3"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AAEA;;AAEA;AACA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAXA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;AAEA;AAAA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;;AAEA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AAOA;AAmBA;AAAA;AAfA;AAEA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA1WA;AAAA;AAAA;AAAA;AAjBA;AALA;AACA;AACA;AACA;AAqBA;AAnBA;AAAA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;;;;A","sourceRoot":""}