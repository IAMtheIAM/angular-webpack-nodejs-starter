{"version":3,"file":"js/chunks/detail.module.chunk.js","sources":["webpack:///./src/app-components/+detail/detail.module.ts","webpack:///./src/app-components/+detail/detail.style.scss","webpack:///./src/app-components/+detail/detail.component.ts","webpack:///./src/app-components/+detail/detail.routes.ts","webpack:///./src/app-components/+detail/detail.style.scss?6325","webpack:///./src/app-components/+detail/detail.template.html"],"sourcesContent":["/**\r\n * Angular 2 decorators and services\r\n */\r\n// import { BrowserModule } from '@angular/platform-browser'\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n//\r\nimport { detailRoutes } from './detail.routes';\r\n\r\n/*\r\n * Shared Utilities & Other Services\r\n */\r\nimport { Logging } from '../services/utility.service';\r\n\r\n/**\r\n * Imported Components\r\n */\r\nimport { DetailComponent } from './detail.component';\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      // SharedModule,\r\n      RouterModule.forChild(detailRoutes)\r\n   ],\r\n   declarations: [ // Components / Directives/ Pipes\r\n      DetailComponent\r\n   ]\r\n})\r\n\r\n\r\nexport class DetailModule {\r\n\r\n   constructor() {\r\n      if (Logging.isEnabled.light) {\r\n         console.log('%c Hello \\\"Detail\\\" Module!', Logging.normal.orange);\r\n      }   }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system!./~/angular2-load-children-loader!./src/app-components/+detail/detail.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************/\\n/* NotFound404.style.scss */\\n/********************/\\n\", \"\", {\"version\":3,\"sources\":[\"C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/src/app-components/+detail/C:/Source/GitHub/angular2-webpack2-dotnet-starter/complete/frontend/src/app-components/+detail/detail.style.scss\"],\"names\":[],\"mappings\":\"AA8KA,sBAAsB;AACtB,4BAA4B;AAC5B,sBAAsB\",\"file\":\"detail.style.scss\",\"sourcesContent\":[\"//---------------------------------------------//\\r\\n// Variables.scss\\r\\n// all variables...\\r\\n// Docs - http://outlinecss.co.uk/get-started.html#variables\\r\\n//---------------------------------------------//\\r\\n\\r\\n//  * NOTE: Do not include anything that will be actually rendered in CSS, because it will be added to every imported SASS file.\\r\\n//  * Do not use SASS @import inside resources files. Add imported files directly in resources array in webpack config instead.\\r\\n//  * See: https://github.com/shakacode/sass-resources-loader\\r\\n\\r\\n\\r\\n// html\\r\\n$html-font-base: 22px; //  used for calculating media query breakpoints\\r\\n//$font-base: 1rem; //  used for for scaling font-size rhythm - in outline.css framework\\r\\n$bootstrap-font-base: 22px; // used for scaling bootstrap components - in bootstrap/variables.scss\\r\\n\\r\\n$spacing: 1.5rem; // 24px\\r\\n//$body-background-color: #F0F0F0;\\r\\n\\r\\n// Colours\\r\\n$colors-primary-green: #009688;\\r\\n$colors-app-background: #2a4f91;\\r\\n\\r\\n// Fonts\\r\\n//$font-primary: 'Segoe UI', san-serif; // body font\\r\\n//$font-secondary: 'Lato', sans-serif; // title font\\r\\n//$font-monospace: Monaco, Consolas, 'Lucida Console', monospace;\\r\\n//$font-base-color: $color-grey-medium;\\r\\n\\r\\n\\r\\n// Placeholder text colour\\r\\n//$placeholder-text: $color-grey;\\r\\n\\r\\n// Button text color\\r\\n//$btn-text-color: #fff;\\r\\n//$btn-text-color-alt: $color-grey-dark;\\r\\n\\r\\n// Breakpoints\\r\\n$mobile-landscape: 30rem; // 480px\\r\\n$tablet: 40rem; // 640px\\r\\n$tablet-wide: 48rem; // 768px\\r\\n$desktop: 64rem; // 1024px\\r\\n$widescreen: 71.25rem; // 1140px\\r\\n$hd-widescreen: 100rem; // 1140px\\r\\n$ultra-hd-widescreen: 134.375rem; // 2150px for Microsoft Surface Pro 3\\r\\n\\r\\n// Line height\\r\\n$line-height-base: 1.5;\\r\\n\\r\\n// Transitions\\r\\n$transition-default-property: all;\\r\\n$transition-default-easing: ease-in-out;\\r\\n$transition-default-speed: 0.2s;\\r\\n$transition-default-speed-easing: $transition-default-speed $transition-default-easing;\\r\\n\\r\\n\\r\\n//// Layout Conditions\\r\\n$sidebarEnabled: true;\\r\\n$contentContainerWidth: if($sidebarEnabled, 21, 24); // if($condition, true, false)\\r\\n$contentContainerPosition: if($sidebarEnabled, 4, 1);\\r\\n\\r\\n$sidebarWidth: if($sidebarEnabled, 3, 1); // 3 cols if true, 1 col if false. if false, sidebar will be display:none\\r\\n$sidebarPosition: if($sidebarEnabled, 1, 1);\\r\\n\\r\\n//$showSidebar: if($sidebarEnabled, visible, hidden);\\r\\n$showSidebar: if($sidebarEnabled, block, none);\\r\\n\\n// /* Mixins.scss */\\r\\n// e.g. @include respond-min($tablet) {\\r\\n//        background-color: $color-primary;\\r\\n//      }\\r\\n// Docs - http://outlinecss.co.uk/get-started.html#mixins\\r\\n//---------------------------------------------//\\r\\n//  * NOTE: Do not include anything that will be actually rendered in CSS, because it will be added to every imported SASS file.\\r\\n//  * Do not use SASS @import inside resources files. Add imported files directly in resources array in webpack config instead.\\r\\n//  * See: https://github.com/shakacode/sass-resources-loader\\r\\n\\r\\n// ====================================================\\r\\n// ============== VENDOR LIBRARIES  ===================\\r\\n// ====================================================\\r\\n//  * We are using \\\"modular\\\" components, there is not a single master .scss file, but rather one for each component.\\r\\n//  * Therefore, each component's .scss file must have all vendor libraries imported into them or they cannot use the mixins\\r\\n//  * and variables\\r\\n\\r\\n\\r\\n// Susy - SASS Math Library\\r\\n@import \\\"~susy/sass/_susy\\\";\\r\\n//  Bourbon - SASS Mixins Library\\r\\n@import \\\"~bourbon/core/_bourbon.scss\\\";\\r\\n\\r\\n// ====================================================\\r\\n// ============== OUTLINE.CSS MIXINS ==================\\r\\n// ====================================================\\r\\n\\r\\n// media queries / breakpoints\\r\\n@mixin respond-min($width) {\\r\\n  @media screen and (min-width: $width) {\\r\\n    @content;\\r\\n  }\\r\\n}\\r\\n\\r\\n// ghost buttons\\r\\n@mixin ghost-btn($color) {\\r\\n  color: $color;\\r\\n  border: .125rem solid $color;\\r\\n  background-color: transparent;\\r\\n\\r\\n  &:hover,\\r\\n  &:focus,\\r\\n  &:active {\\r\\n    background-color: $color;\\r\\n  }\\r\\n}\\r\\n\\r\\n// gradients\\r\\n@mixin gradient($angle, $colour1, $colour2) {\\r\\n  background: $colour1;\\r\\n  background: linear-gradient(#{$angle}deg, $colour1 0%, $colour2 100%);\\r\\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$colour1', endColorstr='$colour2', GradientType=1);\\r\\n}\\r\\n\\r\\n// icons\\r\\n@mixin icon($icon) {\\r\\n  @extend %icon;\\r\\n  @extend %icon-#{$icon};\\r\\n}\\r\\n\\r\\n@mixin icon-before($icon, $padding: .5rem) {\\r\\n  &:before {\\r\\n    @extend %icon;\\r\\n    @extend %icon-#{$icon};\\r\\n    padding-right: $padding;\\r\\n  }\\r\\n}\\r\\n\\r\\n// ====================================================\\r\\n// ============== CUSTOM MIXINS =======================\\r\\n// ====================================================\\r\\n\\r\\n@mixin content-padding {\\r\\n  padding: 10px 20px;\\r\\n}\\r\\n\\r\\n// Transition Mixin\\r\\n@mixin transition-default($property-speed-ease) {\\r\\n  // If no args are passed, animate all with $transition-default-speed-easing\\r\\n  @if $property-speed-ease == 'default' {\\r\\n    @include transition($transition-default-property $transition-default-speed-easing);\\r\\n  }\\r\\n  // If 1 args are passed, animate given property with $transition-default-speed-easing\\r\\n  @if length($property-speed-ease) == 1 and $property-speed-ease != 'default' {\\r\\n    @include transition($property-speed-ease $transition-default-speed-easing);\\r\\n  }\\r\\n  // If 2 args are passed, animate given property and given transition and default easing\\r\\n  @if length($property-speed-ease) == 2 {\\r\\n    @include transition($property-speed-ease $transition-default-easing);\\r\\n  }\\r\\n  // If 3 args are passed, animate given property and given transition and given easing\\r\\n  @if length($property-speed-ease) == 3 {\\r\\n    @include transition($property-speed-ease);\\r\\n  }\\r\\n}\\r\\n\\r\\n// border radius\\r\\n@mixin border-radius($radius) {\\r\\n  -webkit-border-radius: $radius;\\r\\n  -moz-border-radius: $radius;\\r\\n  -ms-border-radius: $radius;\\r\\n  border-radius: $radius;\\r\\n}\\r\\n\\n$susyDebug:show;\\n$lime:#C0FF33;\\n$magenta:#cc33dd;\\n/********************/\\r\\n/* NotFound404.style.scss */\\r\\n/********************/\\r\\n@import '../../assets/styles/appwide-metastyles.scss';\\r\\n\\r\\ndetail {\\r\\n\\r\\n\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/postcss-loader/lib?{\"postcss\":[null],\"sourceMap\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/sass-resources-loader/lib/loader.js?{\"resources\":[\"./src/assets/styles/variables.scss\",\"./src/assets/styles/mixins.scss\"]}!./~/@epegzz/sass-vars-loader/src?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./src/app-components/+detail/detail.style.scss\n// module id = ./node_modules/css-loader/index.js?sourceMap!./node_modules/postcss-loader/lib/index.js?{\"postcss\":[null],\"sourceMap\":true}!./node_modules/sass-loader/lib/loader.js?sourceMap!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":[\"./src/assets/styles/variables.scss\",\"./src/assets/styles/mixins.scss\"]}!./node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./src/app-components/+detail/detail.style.scss\n// module chunks = 4","import { Component } from '@angular/core';\r\n\r\n/*\r\n * Shared Utilities\r\n */\r\nimport { Logging } from '../services/utility.service';\r\nimport { Authentication } from '../services/authentication.service';\r\nimport { AppState } from '../services/appstate.service';\r\n\r\n/**\r\n * This is where CSS/SCSS files that the component depends on are required.\r\n *\r\n * Function: To enable \"Hot Module Replacement\" of CSS/SCSS files\r\n * during development. During productions, all styles will be extracted into\r\n * external stylesheets. Do NOT add styles the \"Angular2 Way\" in the\r\n * @Component decorator (\"styles\" and \"styleUrls\" properties)\r\n */\r\nimport './detail.style.scss';\r\n\r\n@Component({\r\n   selector: 'detail',\r\n   template: require('./detail.template.html'),\r\n})\r\nexport class DetailComponent {\r\n   constructor() {\r\n\r\n   }\r\n\r\n   ngOnInit() {\r\n      if (Logging.isEnabled.light) { console.log('%c Hello \\\"Detail\\\" component!', Logging.normal.lime); }\r\n   }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system!./~/angular2-load-children-loader!./src/app-components/+detail/detail.component.ts","/**\r\n * Imported Components\r\n */\r\nimport { DetailComponent } from './detail.component';\r\n\r\n/*\r\n * Shared Utilities & Other Services\r\n */\r\nimport { RouteProtection } from '../services/route-protection.service';\r\n\r\n// async components must be named detailRoutes for WebpackAsyncRoute\r\nexport const detailRoutes = [{\r\n   path: '',\r\n   component: DetailComponent, // canActivate: [RouteProtection],\r\n   // pathMatch: 'full'\r\n}];\r\n;\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system!./~/angular2-load-children-loader!./src/app-components/+detail/detail.routes.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/postcss-loader/lib/index.js??ref--0-2!../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../node_modules/sass-resources-loader/lib/loader.js??ref--0-4!../../../node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./detail.style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/postcss-loader/lib/index.js??ref--0-2!../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../node_modules/sass-resources-loader/lib/loader.js??ref--0-4!../../../node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./detail.style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/postcss-loader/lib/index.js??ref--0-2!../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../node_modules/sass-resources-loader/lib/loader.js??ref--0-4!../../../node_modules/@epegzz/sass-vars-loader/src/index.js?files=C%3A%5CSource%5CGitHub%5Cangular2-webpack2-dotnet-starter%5Ccomplete%5Cfrontend%5Csrc%5Cassets%5Cstyles%5Csass-js-variables.js!./detail.style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app-components/+detail/detail.style.scss\n// module id = ./src/app-components/+detail/detail.style.scss\n// module chunks = 4","module.exports = \"<h1>Hello from Detail (sub module)</h1>\\r\\n<div class=\\\"row\\\">\\r\\n   <div class=\\\"col s4\\\">\\r\\n      <div class=\\\"card-panel\\\">\\r\\n          <span>I am a very simple card. I am good at containing small bits of information.\\r\\n          I am convenient because I require little markup to use effectively. I am similar to what is called a panel in other frameworks.\\r\\n          </span>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app-components/+detail/detail.template.html\n// module id = ./src/app-components/+detail/detail.template.html\n// module chunks = 4"],"mappings":";;;;;;;AAAA;;AAEA;AACA;;;;;;;;;;;AAEA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AAEA;;AAEA;AACA;AAcA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AANA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;;AAEA;AACA;AAIA;;;;;;;AAOA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AATA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;ACvBA;;AAEA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;;;;A","sourceRoot":""}