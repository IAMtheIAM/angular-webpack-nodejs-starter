/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = require('@angular/forms/src/directives/select_control_value_accessor');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import2 = require('@angular/core/src/linker/view_utils');
var Wrapper_NgSelectOption = (function () {
    function Wrapper_NgSelectOption(p0, p1, p2) {
        this.changed = false;
        this.context = new import0.NgSelectOption(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_NgSelectOption.prototype.check_ngValue = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this.changed = true;
            this.context.ngValue = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgSelectOption.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this.changed = true;
            this.context.value = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgSelectOption.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    Wrapper_NgSelectOption.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_NgSelectOption;
}());
exports.Wrapper_NgSelectOption = Wrapper_NgSelectOption;
var Wrapper_SelectControlValueAccessor = (function () {
    function Wrapper_SelectControlValueAccessor(p0, p1) {
        this.changed = false;
        this.context = new import0.SelectControlValueAccessor(p0, p1);
    }
    Wrapper_SelectControlValueAccessor.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    Wrapper_SelectControlValueAccessor.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_SelectControlValueAccessor;
}());
exports.Wrapper_SelectControlValueAccessor = Wrapper_SelectControlValueAccessor;
//# sourceMappingURL=select_control_value_accessor.ngfactory.js.map